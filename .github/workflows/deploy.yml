name: Build and Deploy to GCP

on:
  push:
    branches: [ main ]
    paths:
      - 'web/**'
      - 'extension_backend/**'
      - 'chatbot/**'
      - 'docker-compose.yaml'
      - '.github/workflows/deploy.yml'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  REGION: asia-southeast1
  ARTIFACT_REGISTRY: ${{ secrets.GCP_PROJECT_ID }}/phisher-repo

jobs:
  build:
    name: Build and Push Images
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev
    
    - name: Prepare web server build
      run: |
        mkdir -p ./web/server/prisma
        cp ./database/prisma/schema.prisma ./web/server/prisma/
        cp -r ./database/prisma/migrations ./web/server/prisma/ || true

    - name: Build and push web-server
      uses: docker/build-push-action@v5
      with:
        context: ./web/server
        push: true
        tags: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/phisher-repo/web-server:${{ github.sha }},${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/phisher-repo/web-server:latest

  deploy-web-server:
    name: Deploy Web Server
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: Deploy web-server using gcloud directly
      run: |
        gcloud run deploy web-server \
          --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/phisher-repo/web-server:${{ github.sha }} \
          --region=${{ env.REGION }} \
          --platform=managed \
          --allow-unauthenticated \
          --memory=512Mi \
          --cpu=1 \
          --add-cloudsql-instances=pusl3190-phisher:asia-southeast1:phisher-postgres \
          --set-env-vars="NODE_ENV=production" \
          --set-env-vars="DATABASE_URL=${{ secrets.DATABASE_URL }}" \
          --set-env-vars="CLIENT_URL=https://phisher.live" \
          --execution-environment=gen2 \
          --startup-cpu-boost \
          --timeout=15m